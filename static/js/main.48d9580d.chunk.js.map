{"version":3,"sources":["logo.png","crc_logo.png","constants/index.js","util/APIUtils.js","home/SiteList.js","home/Home.js","user/login/Login.js","common/AppHeader.js","common/NotFound.js","common/LoadingIndicator.js","user/signup/NewUser.js","home/UserList.js","home/NewToxicity.js","home/ToxicityData.js","home/NewConsumption.js","home/ConsumptionData.js","home/ChemicalInput.js","home/NewSite.js","home/SiteData.js","home/RankChart.js","home/SiteDetails.js","home/CompareSites.js","app/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","API_BASE_URL","process","REACT_APP_API_BASE_URL","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","SiteList","props","className","title","Component","Home","renderTitle","bind","handleManagerUsersClick","handleToxicityClick","handleConsumptionClick","handleSitesClicked","this","renderHomeView","renderAboutPoints","currentUser","renderCurrentUserTitleBar","isAdmin","name","href","target","style","marginTop","gutter","span","icon","onClick","role","subTitle","history","push","FormItem","Item","Login","AntWrappedLoginForm","create","LoginForm","onLogin","state","loading","handleSubmit","event","preventDefault","form","validateFields","err","values","setState","loginRequest","method","body","JSON","stringify","login","setItem","accessToken","catch","error","status","notification","message","description","getFieldDecorator","onSubmit","rules","required","prefix","type","size","placeholder","htmlType","Header","AppHeader","handleMenuClick","key","onLogout","src","crcLogo","alt","to","mainLogo","renderMenu","menuItems","ProfileDropdownMenu","mode","selectedKeys","location","pathname","lineHeight","dropdownMenu","disabled","username","Divider","overlay","trigger","getPopupContainer","document","getElementsByClassName","marginRight","withRouter","LoadingIndicator","antIcon","fontSize","spin","indicator","display","textAlign","NewUser","handleOkClick","isEdit","confirmLoading","isLoading","signupRequest","signUpRequest","id","resetFields","onCreate","signup","visible","onCancel","onOk","footer","labelCol","xs","sm","wrapperCol","label","min","max","hasFeedback","Password","regexp","width","valuePropName","UserList","saveFormRef","formRef","userModalVisible","selectedUser","users","columns","dataIndex","render","text","record","handleUserClicked","sorter","a","b","length","sortDirections","organization","roles","map","color","roleName","toUpperCase","onConfirm","handleDelete","handleAddNewUserClick","handleAddUserSubmit","handleAddUserCancel","loadAllUsers","CollectionCreateForm","mapPropsToFields","createFormField","value","email","phoneNumber","designation","admin","onBack","extra","renderNavigationButtons","rowKey","dataSource","wrappedComponentRef","deleteUser","success","user","goBack","NewToxicity","toxicityRequest","updateToxicity","createToxicity","checkNumber","rule","callback","console","log","validator","ToxicityData","modalVisible","selectedToxicity","toxicityResponse","toxicityData","currentPage","pageSize","totalRecords","chemicalName","handleBackClick","handleAddNewDataClick","onPageChanged","loadData","page","count","getToxicityData","data","pageCnt","pagination","filters","current","chemicalFormula","soilGuideline","soilRef","waterGuideline","waterRef","dosageRef","reference","cancerSlopeFactor","cancerSlopeRef","onChange","total","defaultPageSize","deleteToxicity","Option","NewConsumption","consumptionRequest","updateConsumtion","createConsumption","field","getFieldValue","ConsumptionData","selectedConsumption","consumptionResponse","consumptionData","ageGrp","getConsumptionData","bodyWtAvg","ciData1","ciData2","soilInvAvg","waterConsAvg","deleteConsumption","consumption","ChemicalInput","handleNumberChange","e","contaminationValue","parseFloat","isNaN","triggerChange","handleContaminationTypeChange","contaminationType","handleChemicalUnitChange","measuringUnit","handleChemicalChange","chemical_id","chemicals","find","chemical","chemicalId","changedValue","checmicalOptions","chemicalOptions","nextProps","showRemove","React","NewSite","nonNullChemicals","filter","siteRequest","siteName","siteLocation","siteState","siteOrg","createSite","remove","k","keys","setFieldsValue","add","nextKeys","concat","formItemLayout","initialValue","formItems","index","validateTrigger","offset","SiteData","selectedSite","sitesResponse","sitesData","selectedRowKeys","selectedRows","handleSiteClick","onSelectChange","compareSites","loadAllChemicals","getSites","rowSelection","hasSelected","deleteSite","site","selectedIds","RankChart","fields","handleToolTipClicked","dv","DataSet","createView","source","transform","height","forceFit","onPlotClick","evt","onSiteClicked","_origin","crosshairs","select","position","adjust","marginRatio","defaultProps","siteNameKey","SiteDetails","siteId","require","parse","search","sites","siteData","renderSiteDetails","marginBottom","renderTierOneChart","renderTierTwoChart","renderTierThreeChart","renderChecmicalContaminents","t1","entries","typeData","t2","t2Data","ageGroup","t3","t3Data","bordered","orgName","siteContaminant","CompareSites","parsedQuery","arrayFormat","idArray","parseInt","v","siteIds","getSiteNameKey","handleOnSiteClicked","ids","singleSiteData","isSingleSite","substring","indexOf","ageGroups","dataByAgeGroup","ageGroupData","siteInfo","NCR","CR","views","Content","Footer","App","isAuthenticated","handleLogout","loadCurrentUser","handleLogin","handleDetails","config","placement","top","duration","redirectTo","notificationType","removeItem","exact","path","onDetails","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.48d9580d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.be5ea3ab.png\";","module.exports = __webpack_public_path__ + \"static/media/crc_logo.f3669c91.png\";","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\nexport const ACCESS_TOKEN = 'accessToken';\n\nexport const NAME_MIN_LENGTH = 4;\nexport const NAME_MAX_LENGTH = 40;\n\nexport const USERNAME_MIN_LENGTH = 3;\nexport const USERNAME_MAX_LENGTH = 15;\n\nexport const EMAIL_MAX_LENGTH = 40;\n\nexport const PASSWORD_MIN_LENGTH = 6;\nexport const PASSWORD_MAX_LENGTH = 20;","import { API_BASE_URL, ACCESS_TOKEN } from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function getAllUsers() {\n    return request({\n        url: API_BASE_URL + \"/users\",\n        method: 'GET'\n    });\n}\n\nexport function deleteUser(id) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + id,\n        method: 'DELETE'\n    });\n}\n\nexport function udpateUser(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/user/update\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function getToxicityData(page, count) {\n    return request({\n        url: API_BASE_URL + \"/toxicity?page=\" + page + \"&count=\" + count,\n        method: 'GET'\n    });\n}\n\nexport function deleteToxicity(id) {\n    return request({\n        url: API_BASE_URL + \"/toxicity/\" + id,\n        method: 'DELETE'\n    });\n}\n\nexport function createToxicity(toxicityRequest) {\n    return request({\n        url: API_BASE_URL + \"/toxicity/insert\",\n        method: 'POST',\n        body: JSON.stringify(toxicityRequest)\n    });\n}\n\nexport function updateToxicity(toxicityRequest) {\n    return request({\n        url: API_BASE_URL + \"/toxicity/update\",\n        method: 'POST',\n        body: JSON.stringify(toxicityRequest)\n    });\n}\n\nexport function getConsumptionData(page, count) {\n    return request({\n        url: API_BASE_URL + \"/consumption?page=\" + page + \"&count=\" + count,\n        method: 'GET'\n    });\n}\n\nexport function deleteConsumption(id) {\n    return request({\n        url: API_BASE_URL + \"/consumption/\" + id,\n        method: 'DELETE'\n    });\n}\n\nexport function createConsumption(consumptionRequest) {\n    return request({\n        url: API_BASE_URL + \"/consumption/insert\",\n        method: 'POST',\n        body: JSON.stringify(consumptionRequest)\n    });\n}\n\nexport function updateConsumtion(consumptionRequest) {\n    return request({\n        url: API_BASE_URL + \"/consumption/update\",\n        method: 'POST',\n        body: JSON.stringify(consumptionRequest)\n    });\n}\n\nexport function getAllChemicals() {\n    return request({\n        url: API_BASE_URL + \"/chemicals\",\n        method: 'GET'\n    });\n}\n\nexport function getSites(page, count) {\n    return request({\n        url: API_BASE_URL + \"/sites?page=\" + page + \"&count=\" + count,\n        method: 'GET'\n    });\n}\n\nexport function createSite(siteRequest) {\n    return request({\n        url: API_BASE_URL + \"/site/add\",\n        method: 'POST',\n        body: JSON.stringify(siteRequest)\n    });\n}\n\nexport function updateSite(siteRequest) {\n    return request({\n        url: API_BASE_URL + \"/site/update\",\n        method: 'POST',\n        body: JSON.stringify(siteRequest)\n    });\n}\n\nexport function deleteSite(id) {\n    return request({\n        url: API_BASE_URL + \"/site/\" + id,\n        method: 'DELETE'\n    });\n}\n\nexport function getSitesWithData(ids) {\n    return request({\n        url: API_BASE_URL + \"/sites/data\",\n        method: 'POST',\n        body: JSON.stringify(ids)\n    });\n}\n\nexport function getSite(id) {\n    return request({\n        url: API_BASE_URL + \"/site/\" + id,\n        method: 'GET'\n    });\n}","import React, { Component } from 'react';\nimport { PageHeader } from 'antd';\nimport './SiteList.css';\n\nclass SiteList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"site-home-container\">\n                <PageHeader title=\"Sites List\" />\n            </div>\n        );\n    }\n}\n\nexport default SiteList;","import React, { Component } from 'react';\nimport './Home.css';\nimport { Button, PageHeader, Row, Col } from 'antd';\nimport SiteList from './SiteList';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.renderTitle = this.renderTitle.bind(this)\n        this.handleManagerUsersClick = this.handleManagerUsersClick.bind(this)\n        this.handleToxicityClick = this.handleToxicityClick.bind(this);\n        this.handleConsumptionClick = this.handleConsumptionClick.bind(this);\n        this.handleSitesClicked = this.handleSitesClicked.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                {this.renderTitle()}\n                {this.renderHomeView()}\n                {this.renderAboutPoints()}\n            </div>\n        );\n    }\n\n    renderTitle() {\n        if (this.props.currentUser) {\n            return (\n                this.renderCurrentUserTitleBar(this.props.currentUser.isAdmin, this.props.currentUser.name, this.props.currentUser.isAdmin ? '(Admin)' : '(Client)')\n            )\n        } else {\n            return (\n                <h1 className=\"page-title\">Home</h1>\n            )\n        }\n    }\n\n    renderAboutPoints() {\n        return (\n            <div>\n                <h3 className=\"about-title\">CRC Care Innovative Research Programs</h3>\n            <div className=\"about-points-box\">\n                <ol>\n                    <li><strong><a href=\"https://www.crccare.com/our-research/program-1-policy\" target=\"_blank\">Best Practice Policy</a></strong><strong>: </strong><em>More\n                    effective, efficient and certain national policy for assessing and remediating\ncontamination</em></li>\n                    <li style={{marginTop:'16px'}}><a href=\"https://www.crccare.com/our-research/program-2-measurement\" target=\"_blank\"><strong>Better Measurement</strong></a>: <em>More\naccurate, rapid, reliable and cost-effective measurement and assessment</em></li>\n                    <li style={{marginTop:'16px'}}><strong><a href=\"https://www.crccare.com/our-research/program-3-risk-assessment\" target=\"_blank\">Minimising Uncertainty in Risk Assessment</a>: </strong><em>New\n                    technology, methods and knowledge for assessing risks to human health and the\nenvironment</em></li>\n                    <li style={{marginTop:'16px'}}><strong><a href=\"https://www.crccare.com/our-research/program-4-remediation\" target=\"_blank\">Cleaning Up</a>: </strong><em>Innovative clean-up technologies and a wider\nrange of effective management options</em></li>\n                </ol>\n            </div>\n            </div>\n        )\n    }\n\n    renderHomeView() {\n        if (this.props.currentUser && this.props.currentUser.isAdmin) {\n            return (\n                <div className=\"gutter-container\">\n                    <Row gutter={16}>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"user\" className=\"gutter-button\" onClick={this.handleManagerUsersClick}>Manage Users</Button>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"table\" className=\"gutter-button\" onClick={this.handleSitesClicked}>Sites List</Button>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"database\" className=\"gutter-button\" onClick={this.handleConsumptionClick}>Consumption Data</Button>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={6}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"database\" className=\"gutter-button\" onClick={this.handleToxicityClick}>Toxicity Data</Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"gutter-container\">\n                    <Row gutter={16}>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"table\" className=\"gutter-button\" onClick={this.handleSitesClicked}>Sites List</Button>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"database\" className=\"gutter-button\" onClick={this.handleConsumptionClick}>Consumption Data</Button>\n                            </div>\n                        </Col>\n                        <Col className=\"gutter-row\" span={8}>\n                            <div className=\"gutter-box\">\n                                <Button icon=\"database\" className=\"gutter-button\" onClick={this.handleToxicityClick}>Toxicity Data</Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        }\n    }\n\n    renderSiteList() {\n        return (\n            <SiteList />\n        )\n    }\n\n    renderCurrentUserTitleBar(isAdmin, name, role) {\n        return (\n            <PageHeader\n                className=\"page-title\"\n                title={name}\n                subTitle={role}>\n            </PageHeader>\n        )\n    }\n\n    handleManagerUsersClick() {\n        this.props.history.push(\"/manage-users\")\n    }\n\n    handleToxicityClick() {\n        this.props.history.push(\"/toxicity\")\n    }\n\n    handleConsumptionClick() {\n        this.props.history.push(\"/consumption\")\n    }\n\n    handleSitesClicked() {\n        this.props.history.push(\"/sites\")\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { login } from '../../util/APIUtils';\nimport './Login.css';\nimport { ACCESS_TOKEN } from '../../constants';\n\nimport { Form, Input, Button, Icon, notification } from 'antd';\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm)\n        return (\n            <div className=\"login-container\">\n                <h1 className=\"page-title\">Login</h1>\n                <div className=\"login-content\">\n                    <AntWrappedLoginForm onLogin={this.props.onLogin} />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    state = {\n        loading: false\n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                this.setState({ loading: true });\n\n                const loginRequest = Object.assign({}, values);\n                login(loginRequest)\n                    .then(response => {\n                        localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n                        this.props.onLogin();\n                    }).catch(error => {\n                        this.setState({ loading: false });\n                        if (error.status === 401) {\n                            notification.error({\n                                message: 'rankCare',\n                                description: 'Your Username or Password is incorrect. Please try again!'\n                            });\n                        } else {\n                            notification.error({\n                                message: 'rankCare',\n                                description: error.message || 'Sorry! Something went wrong. Please try again!'\n                            });\n                        }\n                });\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <FormItem>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" />}\n                            size=\"large\"\n                            name=\"username\"\n                            placeholder=\"Username\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!' }],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" />}\n                            size=\"large\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\" loading={this.state.loading}>Login</Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\n\nexport default Login;","import React, { Component } from 'react';\nimport {\n    Link,\n    withRouter\n} from 'react-router-dom';\nimport './AppHeader.css';\nimport mainLogo from '../logo.png';\nimport crcLogo from '../crc_logo.png';\nimport { Layout, Menu, Dropdown, Icon } from 'antd';\nconst Header = Layout.Header;\n\nclass AppHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n    }\n\n    handleMenuClick({ key }) {\n        if (key === \"logout\") {\n            this.props.onLogout();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <img className=\"crc-title-img\" src={crcLogo} alt=\"rankCare\" />\n                    <div className=\"headertagline\">CRC CARE brings together industry, government, science and engineering to prevent, assess and clean up environmental contamination</div>\n                </div>\n                <Header className=\"app-header\">\n                    <div className=\"container\">\n                        <div>\n                            <Link to=\"/\">\n                                <img className=\"app-title-img\" src={mainLogo} alt=\"rankCare\" />\n                            </Link>\n                        </div>\n                        {this.props.currentUser &&\n                            this.renderMenu()\n                        }\n                    </div>\n                </Header>\n            </div>\n        );\n    }\n\n    renderMenu() {\n        let menuItems;\n        if (this.props.currentUser) {\n            menuItems = [\n                <Menu.Item key=\"/\">\n                    <Link to=\"/\">\n                        <Icon type=\"home\" className=\"nav-icon\" />\n                    </Link>\n                </Menu.Item>,\n                <Menu.Item key=\"/profile\" className=\"profile-menu\">\n                    <ProfileDropdownMenu\n                        currentUser={this.props.currentUser}\n                        handleMenuClick={this.handleMenuClick} />\n                </Menu.Item>\n            ];\n        }\n\n        return (\n            <Menu\n                className=\"app-menu\"\n                mode=\"horizontal\"\n                selectedKeys={[this.props.location.pathname]}\n                style={{ lineHeight: '64px' }} >\n                {menuItems}\n            </Menu>\n        )\n    }\n}\n\nfunction ProfileDropdownMenu(props) {\n    const dropdownMenu = (\n        <Menu onClick={props.handleMenuClick} className=\"profile-dropdown-menu\">\n            <Menu.Item key=\"user-info\" className=\"dropdown-item\" disabled>\n                <div className=\"user-full-name-info\">\n                    {props.currentUser.name}\n                </div>\n                <div className=\"username-info\">\n                    @{props.currentUser.username}\n                </div>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item key=\"logout\" className=\"dropdown-item\">\n                Logout\n      </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <Dropdown\n            overlay={dropdownMenu}\n            trigger={['click']}\n            getPopupContainer={() => document.getElementsByClassName('profile-menu')[0]}>\n            <a className=\"ant-dropdown-link\">\n                <Icon type=\"user\" className=\"nav-icon\" style={{ marginRight: 0 }} /> <Icon type=\"down\" />\n            </a>\n        </Dropdown>\n    );\n}\n\n\nexport default withRouter(AppHeader);","import React, { Component } from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div className=\"page-not-found\">\n                <h1 className=\"title\">\n                    404\n                </h1>\n                <div className=\"desc\">\n                    The Page you're looking for was not found.\n                </div>\n                <Link to=\"/\"><Button className=\"go-back-btn\" type=\"primary\" size=\"large\">Go Back</Button></Link>\n            </div>\n        );\n    }\n}\nexport default NotFound;","import React from 'react';\nimport { Spin, Icon } from 'antd';\n\nexport default function LoadingIndicator(props) {\n    const antIcon = <Icon type=\"loading-3-quarters\" style={{ fontSize: 30 }} spin />;\n    return (\n        <Spin indicator={antIcon} style = {{display: 'block', textAlign: 'center', marginTop: 30}} />\n    );\n}","import React, { Component } from 'react';\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Button,\n    Modal,\n    Switch,\n    notification\n} from 'antd';\nimport { signup, udpateUser } from '../../util/APIUtils';\n\nclass NewUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmLoading: false,\n            isLoading: false\n        }\n        this.handleOkClick = this.handleOkClick.bind(this);\n    }\n\n    handleOkClick = () => {\n        const isEdit = this.props.isEdit\n\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            this.setState({\n                confirmLoading: true,\n                isLoading: true\n            });\n\n            const signUpRequest = Object.assign({}, values);\n            signUpRequest.id = this.props.id\n\n            if (isEdit) {\n                udpateUser(signUpRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            } else {\n                signup(signUpRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            }\n        });\n    }\n\n    render() {\n        const { visible, onCancel, form } = this.props;\n        const { getFieldDecorator } = form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        return (\n            <Modal\n                title={this.props.isEdit ? \"Edit User\" : \"Add New User\"}\n                visible={visible}\n                onOk={this.handleOkClick}\n                onCancel={onCancel}\n                confirmLoading={this.state.confirmLoading}\n                footer={[\n                    <Button key=\"back\" onClick={onCancel}>\n                        Cancel\n                    </Button>,\n                    <Button type=\"primary\" loading={this.state.isLoading} onClick={this.handleOkClick}>\n                        Submit\n                    </Button>,\n                ]}>\n                <Form {...formItemLayout}>\n                    <Form.Item\n                        label=\"Name\">\n                        {getFieldDecorator('name', {\n                            rules: [\n                                { required: true, message: 'Please input name!' },\n                                {\n                                    min: 4,\n                                    max: 40,\n                                },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label={\n                            <span>\n                                Username&nbsp;\n                                <Tooltip title=\"This is used for login\">\n                                    <Icon type=\"question-circle-o\" />\n                                </Tooltip>\n                            </span>\n                        }\n                    >\n                        {getFieldDecorator('username', {\n                            rules: [\n                                { required: true, message: 'Please input username!' },\n                                {\n                                    min: 3,\n                                    max: 15,\n                                },\n                            ],\n                        })(<Input disabled={this.props.isEdit} />)}\n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: !this.props.isEdit,\n                                    message: 'Please input password!',\n                                },\n                                {\n                                    min: 6,\n                                    max: 20,\n                                },\n                            ],\n                        })(<Input.Password />)}\n                    </Form.Item>\n                    <Form.Item label=\"E-mail\">\n                        {getFieldDecorator('email', {\n                            rules: [\n                                {\n                                    type: 'email',\n                                    message: 'The input is not valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input E-mail!',\n                                },\n                                {\n                                    max: 40,\n                                },\n                            ],\n                        })(<Input disabled={this.props.isEdit} />)}\n                    </Form.Item>\n                    <Form.Item label=\"Phone Number\">\n                        {getFieldDecorator('phoneNumber', {\n                            rules: [\n                                { required: true, message: 'Please input phone number!' },\n                                { regexp: '^[0-9]*$' },\n                                {\n                                    min: 6,\n                                    max: 15,\n                                },\n                            ]\n                        })(<Input style={{ width: '100%' }} />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Organization\">\n                        {getFieldDecorator('organization', {\n                            rules: [{ required: true, message: 'Please input organization!' }],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Designation\">\n                        {getFieldDecorator('designation', {\n                            rules: [{ required: true, message: 'Please input designation!' }],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Is Admin\">\n                        {getFieldDecorator('isAdmin', { valuePropName: 'checked' })(<Switch disabled={this.props.isEdit}/>)}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default NewUser;","import React, { Component } from 'react';\nimport { PageHeader, Table, Tag, Button, Popconfirm, Icon, Form, notification } from 'antd';\nimport './UserList.css';\nimport { getAllUsers, deleteUser } from '../util/APIUtils';\nimport NewUser from '../user/signup/NewUser';\n\nclass UserList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: props.currentUser,\n            isLoading: false,\n            userModalVisible: false,\n            selectedUser: null,\n            users: [],\n            columns: [\n                {\n                    title: 'Name',\n                    dataIndex: 'name',\n                    key: 'name',\n                    render: (text, record) => <a className=\"user-list-name-link\" onClick={() => this.handleUserClicked(record)}>{text}</a>,\n                    sorter: (a, b) => a.name.length - b.name.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'User Name',\n                    dataIndex: 'username',\n                    key: 'username',\n                },\n                {\n                    title: 'Email',\n                    dataIndex: 'email',\n                    key: 'email',\n                },\n                {\n                    title: 'Phone Number',\n                    dataIndex: 'phoneNumber',\n                    key: 'phoneNumber',\n                },\n                {\n                    title: 'Org',\n                    dataIndex: 'organization',\n                    key: 'organization',\n                    sorter: (a, b) => a.organization.length - b.organization.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Role',\n                    dataIndex: 'roles',\n                    key: 'roles',\n                    sorter: (a, b) => a.roles[0].name.length - b.roles[0].name.length,\n                    sortDirections: ['descend', 'ascend'],\n                    render: roles => (\n                        <span>\n                            {roles.map(role => {\n                                let color = role.name == \"ROLE_ADMIN\" ? 'red' : 'green';\n                                let roleName = role.name == \"ROLE_ADMIN\" ? 'Admin' : 'Client'\n                                return (\n                                    <Tag color={color} key={roleName}>\n                                        {roleName.toUpperCase()}\n                                    </Tag>\n                                );\n                            })}\n                        </span>\n                    ),\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'id',\n                    key: 'id',\n                    render: (text, record) =>\n                        this.state.users.length >= 1 && record.id != this.state.currentUser.id ? (\n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\n                                <a className=\"user-list-delete-link\">\n                                    <Icon type=\"delete\" className=\"nav-icon\" />\n                                </a>\n                            </Popconfirm>\n                        ) : null,\n                },\n            ]\n        }\n\n        this.handleManagerUsersClick = this.handleManagerUsersClick.bind(this)\n        this.handleAddNewUserClick = this.handleAddNewUserClick.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this)\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this)\n        this.handleUserClicked = this.handleUserClicked.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadAllUsers();\n    }\n\n    loadAllUsers() {\n        this.setState({\n            isLoading: true\n        });\n        getAllUsers()\n            .then(response => {\n                this.setState({\n                    isLoading: false,\n                    users: response\n                });\n            }).catch(error => {\n                this.setState({\n                    isLoading: false,\n                    users: []\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        const selectedUser = this.state.selectedUser\n\n        const CollectionCreateForm = Form.create(\n            {\n                name: 'form_in_modal',\n                mapPropsToFields(props) {\n                    if (selectedUser) {\n                        return {\n                            name: Form.createFormField({\n                                ...props.name,\n                                value: selectedUser.name\n                            }),\n                            username: Form.createFormField({\n                                ...props.username,\n                                value: selectedUser.username\n                            }),\n                            email: Form.createFormField({\n                                ...props.email,\n                                value: selectedUser.email\n                            }),\n                            phoneNumber: Form.createFormField({\n                                ...props.phoneNumber,\n                                value: selectedUser.phoneNumber\n                            }),\n                            organization: Form.createFormField({\n                                ...props.organization,\n                                value: selectedUser.organization\n                            }),\n                            designation: Form.createFormField({\n                                ...props.designation,\n                                value: selectedUser.designation\n                            }),\n                            isAdmin: Form.createFormField({\n                                ...props.isAdmin,\n                                value: selectedUser.admin\n                            }),\n                        };\n                    } else {\n                        return {};\n                    }\n                },\n            }\n        )(NewUser)\n\n        return (\n            <div>\n                <div className=\"user-home-container\">\n                    <PageHeader className=\"user-list-page-title\" title=\"Manage Users\" onBack={this.handleManagerUsersClick} extra={this.renderNavigationButtons()} />\n                    <Table rowKey={record => record.id} columns={this.state.columns} dataSource={this.state.users} />\n                </div>\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.userModalVisible}\n                    onCancel={this.handleAddUserCancel}\n                    onCreate={this.handleAddUserSubmit}\n                    isEdit={this.state.selectedUser != null}\n                    id={this.state.selectedUser ? this.state.selectedUser.id : null}\n                />\n            </div>\n        );\n    }\n\n    renderNavigationButtons() {\n        return (\n            [\n                <Button key=\"1\" onClick={this.handleAddNewUserClick}>Add New User</Button>,\n            ]\n        )\n    }\n\n    handleDelete(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        deleteUser(id)\n            .then(response => {\n                notification.success({\n                    message: 'rankCare',\n                    description: \"User deleted successfully!\",\n                });\n                this.loadAllUsers();\n            }).catch(error => {\n                this.setState({ isLoading: false });\n                notification.error({\n                    message: 'rankCare',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });\n            });\n    }\n\n    handleUserClicked(user) {\n        this.setState({\n            userModalVisible: true,\n            selectedUser: user\n        });\n    }\n\n    handleAddNewUserClick() {\n        this.setState({\n            userModalVisible: true,\n            selectedUser: null\n        });\n    }\n\n    handleManagerUsersClick() {\n        this.props.history.goBack()\n    }\n\n    handleAddUserSubmit() {\n        this.setState({\n            userModalVisible: false,\n            selectedUser: null\n        });\n\n        this.loadAllUsers()\n    }\n\n    handleAddUserCancel() {\n        this.setState({\n            userModalVisible: false,\n            selectedUser: null\n        });\n    }\n}\n\nexport default UserList;","import React, { Component } from 'react';\nimport {\n    Form,\n    Input,\n    Button,\n    Modal,\n    notification,\n    InputNumber\n} from 'antd';\nimport { createToxicity, updateToxicity } from '../util/APIUtils';\n\nclass NewToxicity extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmLoading: false,\n            isLoading: false\n        }\n        this.handleOkClick = this.handleOkClick.bind(this);\n    }\n\n    handleOkClick = () => {\n        const isEdit = this.props.isEdit\n\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            this.setState({\n                confirmLoading: true,\n                isLoading: true\n            });\n\n            const toxicityRequest = Object.assign({}, values);\n            toxicityRequest.id = this.props.id\n\n            if (isEdit) {\n                updateToxicity(toxicityRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            } else {\n                createToxicity(toxicityRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            }\n        });\n    }\n\n    checkNumber = (rule, value, callback) => {\n        console.log(\"Value \" + value)\n        if (value > 0) {\n          callback();\n          return;\n        }\n        callback('This field should be number!');\n    };\n\n    render() {\n        const { visible, onCancel, form } = this.props;\n        const { getFieldDecorator } = form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        return (\n            <Modal\n                width=\"600px\"\n                title={this.props.isEdit ? \"Edit Toxicity Data\" : \"Add Toxicity Data\"}\n                visible={visible}\n                onOk={this.handleOkClick}\n                onCancel={onCancel}\n                confirmLoading={this.state.confirmLoading}\n                footer={[\n                    <Button key=\"back\" onClick={onCancel}>\n                        Cancel\n                    </Button>,\n                    <Button type=\"primary\" key=\"submit\" loading={this.state.isLoading} onClick={this.handleOkClick}>\n                        Submit\n                    </Button>,\n                ]}>\n                <Form {...formItemLayout}>\n                    <Form.Item\n                        label=\"Chemical Name\">\n                        {getFieldDecorator('chemicalName', {\n                            rules: [\n                                { required: true, message: 'Please input chemical name!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Chemical Formula\">\n                        {getFieldDecorator('chemicalFormula', {\n                            rules: [\n                                { required: true, message: 'Please input Chemical Formula!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Soil Guideline (mg/kg)\">\n                        {getFieldDecorator('soilGuideline', {\n                            rules: [\n                                { required: true, message: 'Please input Soil Guideline!' },\n                                { validator: this.checkNumber },\n                            ],\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Soil Reference\">\n                        {getFieldDecorator('soilRef', {\n                            rules: [\n                                { required: true, message: 'Please input Soil Reference!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Water Guideline (mg/ltr)\">\n                        {getFieldDecorator('waterGuideline', {\n                            rules: [\n                                { required: true, message: 'Please input Water Guideline!' },\n                                { validator: this.checkNumber },\n                            ]\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Water Reference\">\n                        {getFieldDecorator('waterRef', {\n                            rules: [{ required: true, message: 'Please input Water Reference!' }],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Dosage Reference\">\n                        {getFieldDecorator('dosageRef', {\n                            rules: [\n                                { required: true, message: 'Please input Dosage Reference!' },\n                                { validator: this.checkNumber },\n                            ]\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Reference\">\n                        {getFieldDecorator('reference', {\n                            rules: [{ required: true, message: 'Please input Reference!' }],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Cancer Slope Factor\">\n                        {getFieldDecorator('cancerSlopeFactor', {\n                            rules: [\n                                { required: true, message: 'Please input Cancer Slope Factor!' },\n                                { validator: this.checkNumber },\n                            ]\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Cancer Slope Reference\">\n                        {getFieldDecorator('cancerSlopeRef', {\n                            rules: [{ required: true, message: 'Please input Cancer Slope Reference!' }],\n                        })(<Input />)}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default NewToxicity;","import React, { Component } from 'react';\nimport { PageHeader, Table, Button, Popconfirm, Icon, Form, notification } from 'antd';\nimport { getToxicityData, deleteToxicity } from '../util/APIUtils';\nimport NewToxicity from './NewToxicity';\n\nclass ToxicityData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: props.currentUser,\n            isAdmin: props.currentUser.isAdmin,\n            isLoading: false,\n            modalVisible: false,\n            selectedToxicity: null,\n            toxicityResponse: null,\n            toxicityData: [],\n            currentPage: 0,\n            pageSize : 20,\n            totalRecords : 0,\n            columns: props.currentUser.isAdmin? [\n                {\n                    title: 'Chemical Name',\n                    dataIndex: 'chemicalName',\n                    key: 'chemicalName',\n                    render: (text, record) => <a className=\"user-list-name-link\" onClick={() => this.handleToxicityClick(record)}>{text}</a>,\n                    sorter: (a, b) => a.chemicalName.length - b.chemicalName.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Formula',\n                    dataIndex: 'chemicalFormula',\n                    key: 'chemicalFormula',\n                },\n                {\n                    title: 'Soil Guideline (mg/kg)',\n                    dataIndex: 'soilGuideline',\n                    key: 'soilGuideline',\n                },\n                {\n                    title: 'Soil Ref',\n                    dataIndex: 'soilRef',\n                    key: 'soilRef',\n                },\n                {\n                    title: 'Water Guideline (mg/ltr)',\n                    dataIndex: 'waterGuideline',\n                    key: 'waterGuideline',\n                },\n                {\n                    title: 'Water Ref',\n                    dataIndex: 'waterRef',\n                    key: 'waterRef',\n                },\n                {\n                    title: 'Dosage Ref',\n                    dataIndex: 'dosageRef',\n                    key: 'dosageRef'\n                },\n                {\n                    title: 'Reference',\n                    dataIndex: 'reference',\n                    key: 'reference'\n                },\n                {\n                    title: 'Cancer Slope Factor',\n                    dataIndex: 'cancerSlopeFactor',\n                    key: 'cancerSlopeFactor'\n                },\n                {\n                    title: 'Cancer Slope Ref',\n                    dataIndex: 'cancerSlopeRef',\n                    key: 'cancerSlopeRef'\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'id',\n                    key: 'id',\n                    render: (text, record) =>\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\n                            <a className=\"user-list-delete-link\">\n                                <Icon type=\"delete\" className=\"nav-icon\" />\n                            </a>\n                        </Popconfirm>,\n                },\n            ] :\n            [\n                {\n                    title: 'Chemical Name',\n                    dataIndex: 'chemicalName',\n                    key: 'chemicalName',\n                    sorter: (a, b) => a.chemicalName.length - b.chemicalName.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Formula',\n                    dataIndex: 'chemicalFormula',\n                    key: 'chemicalFormula',\n                },\n                {\n                    title: 'Soil Guideline (mg/kg)',\n                    dataIndex: 'soilGuideline',\n                    key: 'soilGuideline',\n                },\n                {\n                    title: 'Soil Ref',\n                    dataIndex: 'soilRef',\n                    key: 'soilRef',\n                },\n                {\n                    title: 'Water Guideline (mg/ltr)',\n                    dataIndex: 'waterGuideline',\n                    key: 'waterGuideline',\n                },\n                {\n                    title: 'Water Ref',\n                    dataIndex: 'waterRef',\n                    key: 'waterRef',\n                },\n                {\n                    title: 'Dosage Ref',\n                    dataIndex: 'dosageRef',\n                    key: 'dosageRef'\n                },\n                {\n                    title: 'Reference',\n                    dataIndex: 'reference',\n                    key: 'reference'\n                },\n                {\n                    title: 'Cancer Slope Factor',\n                    dataIndex: 'cancerSlopeFactor',\n                    key: 'cancerSlopeFactor'\n                },\n                {\n                    title: 'Cancer Slope Ref',\n                    dataIndex: 'cancerSlopeRef',\n                    key: 'cancerSlopeRef'\n                },\n            ]\n        }\n\n        this.handleBackClick = this.handleBackClick.bind(this)\n        this.handleAddNewDataClick = this.handleAddNewDataClick.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this)\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this)\n        this.handleToxicityClick = this.handleToxicityClick.bind(this)\n        this.onPageChanged = this.onPageChanged.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData(0);\n    }\n\n    loadData(page) {\n        this.setState({\n            isLoading: true,\n            currentPage: page\n        });\n        getToxicityData(page, this.state.pageSize)\n            .then(response => {\n                this.setState({\n                    isLoading: false,\n                    toxicityResponse: response,\n                    toxicityData: response.data,\n                    totalRecords: (response.pageCnt * this.state.pageSize)\n                });\n            }).catch(error => {\n                this.setState({\n                    isLoading: false,\n                    toxicityResponse: null,\n                    totalRecords: 0,\n                    toxicityData: []\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    onPageChanged(pagination, filters, sorter) {\n        this.loadData(pagination.current - 1)\n    }\n\n    render() {\n        const selectedToxicity = this.state.selectedToxicity\n\n        const CollectionCreateForm = Form.create(\n            {\n                name: 'form_in_modal',\n                mapPropsToFields(props) {\n                    if (selectedToxicity) {\n                        return {\n                            chemicalName: Form.createFormField({\n                                ...props.chemicalName,\n                                value: selectedToxicity.chemicalName\n                            }),\n                            chemicalFormula: Form.createFormField({\n                                ...props.chemicalFormula,\n                                value: selectedToxicity.chemicalFormula\n                            }),\n                            soilGuideline: Form.createFormField({\n                                ...props.soilGuideline,\n                                value: selectedToxicity.soilGuideline\n                            }),\n                            soilRef: Form.createFormField({\n                                ...props.soilRef,\n                                value: selectedToxicity.soilRef\n                            }),\n                            waterGuideline: Form.createFormField({\n                                ...props.waterGuideline,\n                                value: selectedToxicity.waterGuideline\n                            }),\n                            waterRef: Form.createFormField({\n                                ...props.dosageRef,\n                                value: selectedToxicity.waterRef\n                            }),\n                            dosageRef: Form.createFormField({\n                                ...props.dosageRef,\n                                value: selectedToxicity.dosageRef\n                            }),\n                            reference: Form.createFormField({\n                                ...props.reference,\n                                value: selectedToxicity.reference\n                            }),\n                            cancerSlopeFactor: Form.createFormField({\n                                ...props.cancerSlopeFactor,\n                                value: selectedToxicity.cancerSlopeFactor\n                            }),\n                            cancerSlopeRef: Form.createFormField({\n                                ...props.cancerSlopeRef,\n                                value: selectedToxicity.cancerSlopeRef\n                            }),\n                        };\n                    } else {\n                        return {};\n                    }\n                },\n            }\n        )(NewToxicity)\n\n        return (\n            <div>\n                <div className=\"user-home-container\">\n                    <PageHeader className=\"user-list-page-title\" title=\"Toxicity Data\" onBack={this.handleBackClick} extra={this.renderNavigationButtons()} />\n                    <Table\n                        rowKey={record => record.id}\n                        columns={this.state.columns}\n                        dataSource={this.state.toxicityData}\n                        onChange={this.onPageChanged}\n                        pagination={{total: this.state.totalRecords, defaultPageSize: this.state.pageSize, current: this.state.currentPage}}\n                    />\n                </div>\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.modalVisible}\n                    onCancel={this.handleAddUserCancel}\n                    onCreate={this.handleAddUserSubmit}\n                    isEdit={this.state.selectedToxicity != null}\n                    id={this.state.selectedToxicity ? this.state.selectedToxicity.id : null}\n                />\n            </div>\n        );\n    }\n\n    renderNavigationButtons() {\n        if(this.state.isAdmin) {\n            return (\n                [\n                    <Button key=\"1\" onClick={this.handleAddNewDataClick}>Add New Row</Button>,\n                ]\n            )\n        }\n    }\n\n    handleDelete(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        deleteToxicity(id)\n            .then(response => {\n                notification.success({\n                    message: 'rankCare',\n                    description: \"Toxicity deleted successfully!\",\n                });\n                this.loadData(this.state.currentPage);\n            }).catch(error => {\n                this.setState({ isLoading: false });\n                notification.error({\n                    message: 'rankCare',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });\n            });\n    }\n\n    handleToxicityClick(user) {\n        this.setState({\n            modalVisible: true,\n            selectedToxicity: user\n        });\n    }\n\n    handleAddNewDataClick() {\n        this.setState({\n            modalVisible: true,\n            selectedToxicity: null\n        });\n    }\n\n    handleBackClick() {\n        this.props.history.goBack()\n    }\n\n    handleAddUserSubmit() {\n        this.setState({\n            modalVisible: false,\n            selectedToxicity: null\n        });\n\n        this.loadData(this.state.currentPage)\n    }\n\n    handleAddUserCancel() {\n        this.setState({\n            modalVisible: false,\n            selectedToxicity: null\n        });\n    }\n}\n\nexport default ToxicityData;","import React, { Component } from 'react';\nimport {\n    Form,\n    Button,\n    Modal,\n    notification,\n    InputNumber,\n    Select\n} from 'antd';\n\nimport { createConsumption, updateConsumtion } from '../util/APIUtils';\n\nconst { Option } = Select;\n\nclass NewConsumption extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmLoading: false,\n            isLoading: false\n        }\n        this.handleOkClick = this.handleOkClick.bind(this);\n    }\n\n    handleOkClick = () => {\n        const isEdit = this.props.isEdit\n\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            this.setState({\n                confirmLoading: true,\n                isLoading: true\n            });\n\n            const consumptionRequest = Object.assign({}, values);\n            consumptionRequest.id = this.props.id\n\n            if (isEdit) {\n                updateConsumtion(consumptionRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            } else {\n                createConsumption(consumptionRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            }\n        });\n    }\n\n    checkNumber = (rule, value, callback) => {\n        if ((rule.field === \"ageTo\" && value === null) || value > 0) {\n            callback();\n            return;\n        }\n        callback('This field should be number!');\n    };\n\n    render() {\n        const { visible, onCancel, form } = this.props;\n        const { getFieldDecorator, getFieldValue } = form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        return (\n            <Modal\n                width=\"800px\"\n                title={this.props.isEdit ? \"Edit Consumption Data\" : \"Add Consumption Data\"}\n                visible={visible}\n                onOk={this.handleOkClick}\n                onCancel={onCancel}\n                confirmLoading={this.state.confirmLoading}\n                footer={[\n                    <Button key=\"back\" onClick={onCancel}>\n                        Cancel\n                    </Button>,\n                    <Button type=\"primary\" key=\"submit\" loading={this.state.isLoading} onClick={this.handleOkClick}>\n                        Submit\n                    </Button>,\n                ]}>\n                <Form {...formItemLayout}>\n                    <Form.Item\n                        label=\"Age Group From\">\n                        {getFieldDecorator('ageGrp', {\n                            rules: [\n                                { required: true, message: 'Please input age group!' },\n                            ],\n                        })(\n                            <Select\n                                value={getFieldValue('ageGrp')}\n                                style={{ width: '25%' }}\n                            >\n                                <Option value=\"0-3\">0-3</Option>\n                                <Option value=\"3-6\">3-6</Option>\n                                <Option value=\"6-10\">6-10</Option>\n                                <Option value=\"10-18\">10-18</Option>\n                                <Option value=\"18+\">18+</Option>\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Body Weight Avg (Kg)\">\n                        {getFieldDecorator('bodyWtAvg', {\n                            rules: [\n                                { required: true, message: 'Please input Body Weight Average!' },\n                                { validator: this.checkNumber },\n                            ],\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Confidence Limit 95% of soil\">\n                        {getFieldDecorator('ciData1', {\n                            rules: [\n                                { required: true, message: 'Please input CI Data 1!' },\n                                { validator: this.checkNumber },\n                            ],\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item label=\"Confidence Limit 95% of water\">\n                        {getFieldDecorator('ciData2', {\n                            rules: [\n                                { required: true, message: 'Please input CI Data 2!' },\n                                { validator: this.checkNumber },\n                            ]\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Avg Soil Ingestion (mg/day)\">\n                        {getFieldDecorator('soilInvAvg', {\n                            rules: [\n                                { required: true, message: 'Please input Soil In Avg!' },\n                                { validator: this.checkNumber },\n                            ],\n                        })(<InputNumber />)}\n                    </Form.Item>\n                    <Form.Item label=\"Avg Water Consumption (ltr/day)\">\n                        {getFieldDecorator('waterConsAvg', {\n                            rules: [\n                                { required: true, message: 'Please input Water Consumption Avg!' },\n                                { validator: this.checkNumber },\n                            ]\n                        })(<InputNumber />)}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default NewConsumption;","import React, { Component } from 'react';\nimport { PageHeader, Table, Button, Popconfirm, Icon, Form, notification } from 'antd';\nimport { getConsumptionData, deleteConsumption } from '../util/APIUtils';\nimport NewConsumption from './NewConsumption';\n\nclass ConsumptionData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: props.currentUser,\n            isAdmin: props.currentUser.isAdmin,\n            isLoading: false,\n            modalVisible: false,\n            selectedConsumption: null,\n            consumptionResponse: null,\n            consumptionData: [],\n            currentPage: 0,\n            pageSize : 20,\n            totalRecords : 0,\n            columns: props.currentUser.isAdmin ? [\n                {\n                    title: 'Age Group',\n                    dataIndex: 'ageGrp',\n                    key: 'ageGrp',\n                    render: (text, record) => <a className=\"user-list-name-link\" onClick={() => this.handleConsumptionClick(record)}>{text}</a>,\n                    sorter: (a, b) => a.ageGrp.length - b.ageGrp.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Body Weight Avg (Kg)',\n                    dataIndex: 'bodyWtAvg',\n                    key: 'bodyWtAvg',\n                },\n                {\n                    title: 'Confidence Limit 95% of soil',\n                    dataIndex: 'ciData1',\n                    key: 'ciData1',\n                },\n                {\n                    title: 'Confidence Limit 95% of water',\n                    dataIndex: 'ciData2',\n                    key: 'ciData2',\n                },\n                {\n                    title: 'Avg Soil Ingestion (mg/day)',\n                    dataIndex: 'soilInvAvg',\n                    key: 'soilInvAvg',\n                },\n                {\n                    title: 'Avg Water Consumption (ltr/day)',\n                    dataIndex: 'waterConsAvg',\n                    key: 'waterConsAvg',\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'id',\n                    key: 'id',\n                    render: (text, record) =>\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\n                            <a className=\"user-list-delete-link\">\n                                <Icon type=\"delete\" className=\"nav-icon\" />\n                            </a>\n                        </Popconfirm>,\n                },\n            ] :\n            [\n                {\n                    title: 'Age Group',\n                    dataIndex: 'ageGrp',\n                    key: 'ageGrp',\n                    sorter: (a, b) => a.ageGrp.length - b.ageGrp.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Body Weight Avg (Kg)',\n                    dataIndex: 'bodyWtAvg',\n                    key: 'bodyWtAvg',\n                },\n                {\n                    title: 'Confidence Limit 95% of soil',\n                    dataIndex: 'ciData1',\n                    key: 'ciData1',\n                },\n                {\n                    title: 'Confidence Limit 95% of water',\n                    dataIndex: 'ciData2',\n                    key: 'ciData2',\n                },\n                {\n                    title: 'Avg Soil Ingestion (mg/day)',\n                    dataIndex: 'soilInvAvg',\n                    key: 'soilInvAvg',\n                },\n                {\n                    title: 'Avg Water Consumption (ltr/day)',\n                    dataIndex: 'waterConsAvg',\n                    key: 'waterConsAvg',\n                },\n            ]\n        }\n\n        this.handleBackClick = this.handleBackClick.bind(this)\n        this.handleAddNewDataClick = this.handleAddNewDataClick.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this)\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this)\n        this.handleConsumptionClick = this.handleConsumptionClick.bind(this)\n        this.onPageChanged = this.onPageChanged.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData(0);\n    }\n\n    loadData(page) {\n        this.setState({\n            isLoading: true,\n            currentPage: page\n        });\n        getConsumptionData(page, this.state.pageSize)\n            .then(response => {\n                this.setState({\n                    isLoading: false,\n                    consumptionResponse: response,\n                    consumptionData: response.data,\n                    totalRecords: (response.pageCnt * this.state.pageSize)\n                });\n            }).catch(error => {\n                this.setState({\n                    isLoading: false,\n                    consumptionResponse: null,\n                    totalRecords: 0,\n                    consumptionData: []\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    onPageChanged(pagination, filters, sorter) {\n        this.loadData(pagination.current - 1)\n    }\n\n    render() {\n        const selectedConsumption = this.state.selectedConsumption\n\n        const CollectionCreateForm = Form.create(\n            {\n                name: 'form_in_modal',\n                mapPropsToFields(props) {\n                    if (selectedConsumption) {\n                        return {\n                            ageGrp: Form.createFormField({\n                                ...props.ageGrp,\n                                value: selectedConsumption.ageGrp\n                            }),\n                            bodyWtAvg: Form.createFormField({\n                                ...props.bodyWtAvg,\n                                value: selectedConsumption.bodyWtAvg\n                            }),\n                            ciData1: Form.createFormField({\n                                ...props.ciData1,\n                                value: selectedConsumption.ciData1\n                            }),\n                            ciData2: Form.createFormField({\n                                ...props.ciData2,\n                                value: selectedConsumption.ciData2\n                            }),\n                            soilInvAvg: Form.createFormField({\n                                ...props.soilInvAvg,\n                                value: selectedConsumption.soilInvAvg\n                            }),\n                            waterConsAvg: Form.createFormField({\n                                ...props.waterConsAvg,\n                                value: selectedConsumption.waterConsAvg\n                            }),\n                        };\n                    } else {\n                        return {};\n                    }\n                },\n            }\n        )(NewConsumption)\n\n        return (\n            <div>\n                <div className=\"user-home-container\">\n                    <PageHeader className=\"user-list-page-title\" title=\"Consumption Data\" onBack={this.handleBackClick} extra={this.renderNavigationButtons()} />\n                    <Table\n                        rowKey={record => record.id}\n                        columns={this.state.columns}\n                        dataSource={this.state.consumptionData}\n                        onChange={this.onPageChanged}\n                        pagination={{total: this.state.totalRecords, defaultPageSize: this.state.pageSize, current: this.state.currentPage}}\n                    />\n                </div>\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.modalVisible}\n                    onCancel={this.handleAddUserCancel}\n                    onCreate={this.handleAddUserSubmit}\n                    isEdit={this.state.selectedConsumption != null}\n                    id={this.state.selectedConsumption ? this.state.selectedConsumption.id : null}\n                />\n            </div>\n        );\n    }\n\n    renderNavigationButtons() {\n        if(this.state.isAdmin) {\n            return (\n                [\n                    <Button key=\"1\" onClick={this.handleAddNewDataClick}>Add New Row</Button>,\n                ]\n            )\n        }\n    }\n\n    handleDelete(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        deleteConsumption(id)\n            .then(response => {\n                notification.success({\n                    message: 'rankCare',\n                    description: \"Toxicity deleted successfully!\",\n                });\n                this.loadData(this.state.currentPage);\n            }).catch(error => {\n                this.setState({ isLoading: false });\n                notification.error({\n                    message: 'rankCare',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });\n            });\n    }\n\n    handleConsumptionClick(consumption) {\n        this.setState({\n            modalVisible: true,\n            selectedConsumption: consumption\n        });\n    }\n\n    handleAddNewDataClick() {\n        this.setState({\n            modalVisible: true,\n            selectedConsumption: null\n        });\n    }\n\n    handleBackClick() {\n        this.props.history.goBack()\n    }\n\n    handleAddUserSubmit() {\n        this.setState({\n            modalVisible: false,\n            selectedConsumption: null\n        });\n\n        this.loadData(this.state.currentPage)\n    }\n\n    handleAddUserCancel() {\n        this.setState({\n            modalVisible: false,\n            selectedConsumption: null\n        });\n    }\n}\n\nexport default ConsumptionData;","import React, { Component } from 'react';\nimport { InputNumber, Select } from 'antd';\n\nconst { Option } = Select;\n\nclass ChemicalInput extends React.Component {\n  static getDerivedStateFromProps(nextProps) {\n    // Should be a controlled component.\n    if ('value' in nextProps) {\n      return {\n        ...(nextProps.value || {}),\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const value = props.value || {};\n    const chemicals = props.chemicals || [];\n    const checmicalOptions = chemicals.map((chemical) =>\n      <Option key={chemical.id} value={chemical.id}>{chemical.chemicalName}</Option>\n    );\n    this.state = {\n      chemicalOptions: checmicalOptions,\n      chemicalId: chemicals[0].id || 0,\n      chemicalName : chemicals[0].chemicalName || \"\",\n      contaminationValue: value.contaminationValue || 0,\n      contaminationType: value.contaminationType || 'soil',\n      measuringUnit : value.measuringUnit || 'gm'\n    };\n  }\n\n  handleNumberChange = e => {\n    const contaminationValue = parseFloat(e || 0, 10);\n    if (isNaN(contaminationValue)) {\n      return;\n    }\n    if (!('value' in this.props)) {\n      this.setState({ contaminationValue });\n    }\n    this.triggerChange({ contaminationValue });\n  };\n\n  handleContaminationTypeChange = contaminationType => {\n    if (!('value' in this.props)) {\n      this.setState({ contaminationType });\n    }\n    this.triggerChange({ contaminationType });\n  };\n\n  handleChemicalUnitChange = measuringUnit => {\n    if (!('value' in this.props)) {\n      this.setState({ measuringUnit });\n    }\n    this.triggerChange({ measuringUnit });\n  };\n\n  handleChemicalChange = chemical_id => {\n    const chemicalName = this.props.chemicals.find((chemical) => {\n      return chemical.id === chemical_id;\n    }).chemicalName\n    \n    if (!('value' in this.props)) {\n      this.setState({ \n        chemicalId : chemical_id,\n        chemicalName : chemicalName\n      });\n    }\n    this.triggerChange({ \n      chemicalId : chemical_id,\n      chemicalName : chemicalName\n    });\n  };\n\n  triggerChange = changedValue => {\n    // Should provide an event to pass value to Form.\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange({\n        ...this.state,\n        ...changedValue,\n      });\n    }\n  };\n\n  render() {\n    const { size } = this.props;\n    const { measuringUnit, chemicalOptions, chemicalId, contaminationType, contaminationValue } = this.state;\n    return (\n      <span>\n        <Select\n          value={contaminationType}\n          size={size}\n          style={{ width: '18%', marginRight: '2%' }}\n          onChange={this.handleContaminationTypeChange}\n        >\n          <Option value=\"soil\">Soil</Option>\n          <Option value=\"water\">Water</Option>\n        </Select>\n        <Select\n          value={chemicalId}\n          size={size}\n          style={{ width: '28%', marginRight: '2%' }}\n          onChange={this.handleChemicalChange}\n        >\n          {chemicalOptions}\n        </Select>\n        <InputNumber\n          type=\"text\"\n          size={size}\n          value={contaminationValue}\n          onChange={this.handleNumberChange}\n          style={{ width: '20%', marginRight: '2%' }}\n        />\n        <Select\n          value={measuringUnit}\n          size={size}\n          style={{ width: this.props.showRemove ? '20%' : '28%', marginRight : this.props.showRemove ? '5%' : '0' }}\n          onChange={this.handleChemicalUnitChange}\n        >\n          <Option value=\"gm\">gram</Option>\n          <Option value=\"mg\">milligram</Option>\n          <Option value=\"μg\">microgram</Option>\n        </Select>\n      </span>\n    );\n  }\n}\n\nexport default ChemicalInput;","import React, { Component } from 'react';\nimport {\n    Form,\n    Button,\n    Modal,\n    Input,\n    Icon,\n    notification\n} from 'antd';\nimport ChemicalInput from './ChemicalInput';\nimport { createSite, updateSite } from '../util/APIUtils';\n\nlet id = 0;\n\nclass NewSite extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmLoading: false,\n            isLoading: false\n        }\n        this.handleOkClick = this.handleOkClick.bind(this);\n    }\n\n    handleOkClick = () => {\n        const isEdit = this.props.isEdit\n\n        this.props.form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n\n            this.setState({\n                confirmLoading: true,\n                isLoading: true\n            });\n\n            const nonNullChemicals = values.chemicals.filter(function (chemical) {\n                return chemical\n            });\n\n            const siteRequest = {\n                \"id\": this.props.id,\n                \"siteName\": values.siteName,\n                \"siteLocation\": values.siteLocation,\n                \"state\": values.siteState,\n                \"orgName\": values.siteOrg,\n                \"siteContaminant\": nonNullChemicals\n            }\n\n            console.log(\"Form values \" + JSON.stringify(siteRequest));\n\n            // const consumptionRequest = Object.assign({}, values);\n            // consumptionRequest.id = this.props.id\n\n            if (isEdit) {\n                // updateSite(consumptionRequest)\n                //     .then(response => {\n                //         this.setState({\n                //             confirmLoading: false,\n                //             isLoading: false\n                //         });\n                //         this.props.form.resetFields();\n                //         this.props.onCreate();\n                //     }).catch(error => {\n                //         this.setState({ isLoading: false });\n                //         notification.error({\n                //             message: 'rankCare',\n                //             description: error.message || 'Sorry! Something went wrong. Please try again!'\n                //         });\n                //     });\n            } else {\n                createSite(siteRequest)\n                    .then(response => {\n                        this.setState({\n                            confirmLoading: false,\n                            isLoading: false\n                        });\n                        this.props.form.resetFields();\n                        this.props.onCreate();\n                    }).catch(error => {\n                        this.setState({ isLoading: false });\n                        notification.error({\n                            message: 'rankCare',\n                            description: error.message || 'Sorry! Something went wrong. Please try again!'\n                        });\n                    });\n            }\n        });\n    }\n\n    checkNumber = (rule, value, callback) => {\n        if (value == null || value.contaminationValue || value.contaminationValue > 0) {\n            callback();\n            return;\n        }\n        callback('This field should be number!');\n    };\n\n    componentDidMount() {\n        const keys = this.props.form.getFieldValue('keys');\n        if (keys.length === 0) {\n            this.add();\n        }\n    }\n\n    remove = k => {\n        const { form } = this.props;\n        const keys = form.getFieldValue('keys');\n\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    };\n\n    add = () => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n\n        const formItemLayoutWithOutLabel = {\n            wrapperCol: {\n                xs: { span: 24, offset: 0 },\n                sm: { span: 20, offset: 4 },\n            },\n        };\n\n        const { visible, onCancel, form } = this.props;\n        const { getFieldDecorator, getFieldValue } = form;\n        getFieldDecorator('keys', { initialValue: [] });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Form.Item\n                {...formItemLayout}\n                label={'Chemical ' + (index + 1)}\n                required={false}\n                key={k}\n            >\n                {getFieldDecorator(`chemicals[${k}]`, {\n                    validateTrigger: ['onChange', 'onBlur'],\n                    rules: [\n                        {\n                            required: true,\n                            message: index == 0 ? \"Please input chemical contamination value\" : \"Please input chemical contamination value or delete the field\",\n                        },\n                        { validator: this.checkNumber },\n                    ],\n                })(<ChemicalInput showRemove={index > 0} chemicals={this.props.chemicals} style={{ width: '60%', marginRight: 8 }} />)}\n                {\n                    index > 0 ? <Icon\n                        className=\"dynamic-delete-button\"\n                        type=\"minus-circle-o\"\n                        onClick={() => this.remove(k)}\n                    /> : null\n                }\n            </Form.Item>\n        ));\n\n        return (\n            <Modal\n                width=\"800px\"\n                title={this.props.isEdit ? \"Edit Site Data\" : \"Add Site Data\"}\n                visible={visible}\n                onOk={this.handleOkClick}\n                onCancel={onCancel}\n                confirmLoading={this.state.confirmLoading}\n                footer={[\n                    <Button key=\"back\" onClick={onCancel}>\n                        Cancel\n                    </Button>,\n                    <Button type=\"primary\" key=\"submit\" loading={this.state.isLoading} onClick={this.handleOkClick}>\n                        Submit\n                    </Button>,\n                ]}>\n                <Form {...formItemLayout}>\n                    <Form.Item\n                        label=\"Site Name\">\n                        {getFieldDecorator('siteName', {\n                            rules: [\n                                { required: true, message: 'Please input site name!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Site Location\">\n                        {getFieldDecorator('siteLocation', {\n                            rules: [\n                                { required: true, message: 'Please input Site Location!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Site State\">\n                        {getFieldDecorator('siteState', {\n                            rules: [\n                                { required: true, message: 'Please input Site State!' },\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"Site Org\">\n                        {getFieldDecorator('siteOrg', {\n                            rules: [\n                                { required: true, message: 'Please input Site Org!' },\n                            ]\n                        })(<Input />)}\n                    </Form.Item>\n                    {formItems}\n                    <Form.Item {...formItemLayoutWithOutLabel}>\n                        <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n                            <Icon type=\"plus\" /> Add Chemical\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nexport default NewSite;","import React, { Component } from 'react';\nimport { PageHeader, Table, Button, Popconfirm, Icon, Form, notification } from 'antd';\nimport { getSites, deleteSite, getAllChemicals } from '../util/APIUtils';\nimport NewSite from './NewSite';\n\nclass SiteData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: props.currentUser,\n            isAdmin: props.currentUser.isAdmin,\n            isLoading: false,\n            modalVisible: false,\n            selectedSite: null,\n            sitesResponse: null,\n            chemicals: [],\n            sitesData: [],\n            currentPage: 0,\n            pageSize: 20,\n            totalRecords: 0,\n            selectedRowKeys: [],\n            selectedRows: [],\n            columns: props.currentUser.isAdmin ? [\n                {\n                    title: 'Site Name',\n                    dataIndex: 'siteName',\n                    key: 'siteName',\n                    render: (text, record) => <a className=\"user-list-name-link\" onClick={() => this.handleSiteClick(record)}>{text}</a>,\n                    sorter: (a, b) => a.siteName.length - b.siteName.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Site Location',\n                    dataIndex: 'siteLocation',\n                    key: 'siteLocation',\n                },\n                {\n                    title: 'Site State',\n                    dataIndex: 'siteState',\n                    key: 'siteState',\n                },\n                {\n                    title: 'Site Org',\n                    dataIndex: 'siteOrg',\n                    key: 'siteOrg',\n                },\n                {\n                    title: 'Action',\n                    dataIndex: 'id',\n                    key: 'id',\n                    render: (text, record) =>\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.id)}>\n                            <a className=\"user-list-delete-link\">\n                                <Icon type=\"delete\" className=\"nav-icon\" />\n                            </a>\n                        </Popconfirm>,\n                },\n            ] :\n                [\n                    {\n                        title: 'Site Name',\n                        dataIndex: 'siteName',\n                        key: 'siteName',\n                        render: (text, record) => <a className=\"user-list-name-link\" onClick={() => this.handleSiteClick(record)}>{text}</a>,\n                        sorter: (a, b) => a.siteName.length - b.siteName.length,\n                        sortDirections: ['descend', 'ascend'],\n                    },\n                    {\n                        title: 'Site Location',\n                        dataIndex: 'siteLocation',\n                        key: 'siteLocation',\n                    },\n                    {\n                        title: 'Site State',\n                        dataIndex: 'siteState',\n                        key: 'siteState',\n                    },\n                    {\n                        title: 'Site Org',\n                        dataIndex: 'siteOrg',\n                        key: 'siteOrg',\n                    },\n                ]\n        }\n\n        this.handleBackClick = this.handleBackClick.bind(this)\n        this.handleAddNewDataClick = this.handleAddNewDataClick.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this)\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this)\n        this.handleSiteClick = this.handleSiteClick.bind(this)\n        this.onPageChanged = this.onPageChanged.bind(this);\n        this.onSelectChange = this.onSelectChange.bind(this);\n        this.compareSites = this.compareSites.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData(0);\n        this.loadAllChemicals()\n    }\n\n    loadData(page) {\n        this.setState({\n            isLoading: true,\n            currentPage: page\n        });\n        getSites(page, this.state.pageSize)\n            .then(response => {\n                this.setState({\n                    isLoading: false,\n                    sitesResponse: response,\n                    sitesData: response.data,\n                    selectedRowKeys: [],\n                    selectedRows: [],\n                    totalRecords: (response.pageCnt * this.state.pageSize)\n                });\n            }).catch(error => {\n                this.setState({\n                    isLoading: false,\n                    sitesResponse: null,\n                    totalRecords: 0,\n                    selectedRowKeys: [],\n                    selectedRows: [],\n                    sitesData: []\n                });\n            });\n    }\n\n    loadAllChemicals() {\n        getAllChemicals()\n            .then(response => {\n                this.setState({\n                    chemicals: response\n                });\n            }).catch(error => {\n                this.setState({\n                    chemicals: []\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    onPageChanged(pagination, filters, sorter) {\n        this.loadData(pagination.current - 1)\n    }\n\n    onSelectChange(selectedRowKeys, selectedRows) {\n        this.setState({ selectedRowKeys, selectedRows });\n    };\n\n    render() {\n        const selectedSite = this.state.selectedSite\n        const { loading, selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n\n\n        const CollectionCreateForm = Form.create(\n            {\n                name: 'form_in_modal',\n                mapPropsToFields(props) {\n                    if (selectedSite) {\n                        return {\n                            siteName: Form.createFormField({\n                                ...props.siteName,\n                                value: selectedSite.siteName\n                            }),\n                            siteLocation: Form.createFormField({\n                                ...props.siteLocation,\n                                value: selectedSite.siteLocation\n                            }),\n                            siteState: Form.createFormField({\n                                ...props.siteState,\n                                value: selectedSite.siteState\n                            }),\n                            siteOrg: Form.createFormField({\n                                ...props.siteOrg,\n                                value: selectedSite.siteOrg\n                            }),\n                        };\n                    } else {\n                        return {};\n                    }\n                },\n            }\n        )(NewSite)\n\n        return (\n            <div>\n                <div className=\"user-home-container\">\n                    <PageHeader className=\"user-list-page-title\" title=\"Sites Data\" onBack={this.handleBackClick} extra={this.renderNavigationButtons()} />\n                    <Table\n                        rowSelection={rowSelection}\n                        rowKey={record => record.id}\n                        columns={this.state.columns}\n                        dataSource={this.state.sitesData}\n                        onChange={this.onPageChanged}\n                        pagination={{ total: this.state.totalRecords, defaultPageSize: this.state.pageSize, current: this.state.currentPage }}\n                    />\n                </div>\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.modalVisible}\n                    onCancel={this.handleAddUserCancel}\n                    onCreate={this.handleAddUserSubmit}\n                    isEdit={this.state.selectedSite != null}\n                    chemicals={this.state.chemicals}\n                    id={this.state.selectedSite ? this.state.selectedSite.id : null}\n                />\n            </div>\n        );\n    }\n\n    renderNavigationButtons() {\n        const hasSelected = this.state.selectedRowKeys.length > 0;\n\n        return (\n            [\n                <Button key=\"2\" type=\"primary\" onClick={this.compareSites} disabled={!hasSelected} loading={this.state.loading}>\n                    Compare\n                </Button>,\n                <Button key=\"1\" onClick={this.handleAddNewDataClick}>Add New Row</Button>,\n            ]\n        )\n    }\n\n    handleDelete(id) {\n        this.setState({\n            isLoading: true\n        });\n\n        deleteSite(id)\n            .then(response => {\n                notification.success({\n                    message: 'rankCare',\n                    description: \"Site deleted successfully!\",\n                });\n                this.loadData(this.state.currentPage);\n            }).catch(error => {\n                this.setState({ isLoading: false });\n                notification.error({\n                    message: 'rankCare',\n                    description: error.message || 'Sorry! Something went wrong. Please try again!'\n                });\n            });\n    }\n\n    handleSiteClick(site) {\n        this.props.history.push(\"/site-details?sites=\" + site.id)\n    }\n\n    handleAddNewDataClick() {\n        this.setState({\n            modalVisible: true,\n            selectedSite: null\n        });\n    }\n\n    handleBackClick() {\n        this.props.history.goBack()\n    }\n\n    handleAddUserSubmit() {\n        this.setState({\n            modalVisible: false,\n            selectedSite: null\n        });\n\n        this.loadData(this.state.currentPage)\n    }\n\n    handleAddUserCancel() {\n        this.setState({\n            modalVisible: false,\n            selectedSite: null\n        });\n    }\n\n    compareSites() {\n        const selectedRows = this.state.selectedRows\n\n        const selectedIds = selectedRows.map((site) => site.id)\n\n        this.props.history.push(\"/site-compare?sites=\" + selectedIds)\n    }\n}\n\nexport default SiteData;","import React, { Component } from 'react';\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nclass RankChart extends Component {\n  static defaultProps = {\n    onSiteClicked: (siteNameKey) => {}\n }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fields: props.fields,\n      data: props.data,\n      key: props.key,\n      value: props.value\n    }\n\n    this.handleToolTipClicked = this.handleToolTipClicked.bind(this);\n  }\n\n\n  handleToolTipClicked() {\n\n  }\n\n  render() {\n    const data = this.state.data;\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n\n    dv.transform({\n      type: \"fold\",\n      fields: this.state.fields,\n      key: \"X-Axis\",\n      value: \"Tier Value\"\n    });\n\n    return (\n      <div>\n        <Chart width={1000} height={500} data={dv} forceFit onPlotClick={evt => {\n          this.props.onSiteClicked(evt.data._origin.name);\n        }} >\n          <Axis name=\"X-Axis\" />\n          <Axis name=\"Tier Value\" />\n          <Legend />\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom\n            select={true}\n            type=\"interval\"\n            position=\"X-Axis*Tier Value\"\n            color={\"name\"}\n            adjust={[\n              {\n                type: \"dodge\",\n                marginRatio: 1 / 32\n              }\n            ]}\n          />\n        </Chart>\n      </div>\n    );\n  }\n}\n\nexport default RankChart;","import React, { Component } from 'react';\nimport './Home.css';\nimport { PageHeader, Table, Descriptions } from 'antd';\nimport { getSite } from '../util/APIUtils';\nimport RankChart from './RankChart';\n\nclass SiteDetails extends Component {\n    constructor(props) {\n        super(props);\n        const queryString = require('query-string');\n        const siteId = queryString.parse(this.props.location.search).sites\n\n        this.state = {\n            currentUser: props.currentUser,\n            isLoading: false,\n            siteId: siteId,\n            siteData: {},\n            columns: [\n                {\n                    title: 'Contamination Type',\n                    dataIndex: 'contaminationType',\n                    key: 'contaminationType',\n                    sorter: (a, b) => a.contaminationType.length - b.contaminationType.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Chemical Name',\n                    dataIndex: 'chemicalName',\n                    key: 'chemicalName',\n                    sorter: (a, b) => a.chemicalName.length - b.chemicalName.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Contamination Value',\n                    dataIndex: 'valueWithUnit',\n                    key: 'valueWithUnit',\n                },\n            ]\n        }\n\n        this.handleBackClick = this.handleBackClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getSite(this.state.siteId)\n            .then(response => {\n                this.setState({\n                    siteData: response\n                });\n            }).catch(error => {\n                this.setState({\n                    siteData: {}\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    render() {\n        return (\n            <div className=\"user-home-container\">\n                <PageHeader className=\"user-list-page-title\" title={\"Site Details\"} onBack={this.handleBackClick} />\n                {\n                    this.renderSiteDetails()\n                }\n                <h3 style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 1 Values</b></h3>\n                {this.renderTierOneChart()}\n                {this.renderTierTwoChart()}\n                {this.renderTierThreeChart()}\n                {this.renderChecmicalContaminents()}\n            </div>\n        );\n    }\n\n    renderTierOneChart() {\n        const siteData = this.state.siteData;\n        if (siteData && siteData.t1) {\n            const fields = siteData.siteName;\n            const types = [\"Water\", \"Soil\"];\n            const data = [];\n\n            for (const [index, type] of types.entries()) {\n                var typeData = {}\n                typeData.name = type\n                typeData[siteData.siteName] = siteData.t1[type]\n                data.push(typeData)\n            }\n\n            return (\n                <RankChart fields={fields} data={data}/>\n            )\n        }\n    }\n\n    renderTierTwoChart() {\n        const siteData = this.state.siteData;\n        if (siteData && siteData.t2) {\n            const t2Data = siteData.t2;\n            const fields = Object.keys(t2Data);\n            const types = [\"CR\", \"NCR\"]\n            const data = [];\n\n            for (const [index, type] of types.entries()) {\n                var typeData = {}\n                typeData.name = type\n\n                for (const [index, ageGroup] of fields.entries()) {\n                    typeData[ageGroup] = t2Data[ageGroup][type];\n                }\n\n                data.push(typeData)\n            }\n\n            return (\n                <div>\n                    <h3 style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 2 Values</b></h3>\n                    <RankChart fields={fields} data={data} />\n                </div>\n            )\n        }\n    }\n\n    renderTierThreeChart() {\n        const siteData = this.state.siteData;\n        if (siteData && siteData.t3) {\n            const t3Data = siteData.t3;\n            const fields = Object.keys(t3Data);\n            const types = [\"CR\", \"NCR\"]\n            const data = [];\n\n            for (const [index, type] of types.entries()) {\n                var typeData = {}\n                typeData.name = type\n\n                for (const [index, ageGroup] of fields.entries()) {\n                    typeData[ageGroup] = t3Data[ageGroup][type];\n                }\n\n                data.push(typeData)\n            }\n\n            return (\n                <div>\n                    <h3 style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 3 Values</b></h3>\n                    <RankChart fields={fields} data={data} />\n                </div>\n            )\n        }\n    }\n\n    renderSiteDetails() {\n        const siteData = this.state.siteData\n        if (siteData) {\n            return (\n                <div>\n                    <Descriptions bordered className=\"site-details-box\">\n                        <Descriptions.Item label=\"Site Name\">{siteData.siteName}</Descriptions.Item>\n                        <Descriptions.Item label=\"Site Location\" span={2}>\n                            {siteData.siteLocation}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"Site State\">{siteData.state}</Descriptions.Item>\n                        <Descriptions.Item label=\"site Org\">{siteData.orgName}</Descriptions.Item>\n                    </Descriptions>\n                </div>\n            )\n        }\n    }\n\n    renderChecmicalContaminents() {\n        const siteData = this.state.siteData\n        if (siteData) {\n            return (\n                <div>\n                    <h3 style={{ marginBottom: '32px' }}><b>Site Contaminants</b></h3>\n                    <Table\n                        rowKey={record => record.id}\n                        columns={this.state.columns}\n                        dataSource={siteData.siteContaminant}\n                        pagination={false}\n                    />\n                </div>\n            )\n        }\n    }\n\n    handleBackClick() {\n        this.props.history.goBack()\n    }\n}\n\nexport default SiteDetails;","import React, { Component } from 'react';\nimport './Home.css';\nimport { PageHeader, Table, Button, Popconfirm, Icon, Descriptions } from 'antd';\nimport { getSitesWithData } from '../util/APIUtils';\nimport RankChart from './RankChart';\n\nclass CompareSites extends Component {\n    constructor(props) {\n        super(props);\n        const queryString = require('query-string');\n        const parsedQuery = queryString.parse(props.location.search, { arrayFormat: 'comma' }).sites;\n        const idArray = typeof parsedQuery === 'string' ? [parseInt(parsedQuery, 10)] : parsedQuery.map(v => parseInt(v, 10));\n\n        this.state = {\n            currentUser: props.currentUser,\n            isLoading: false,\n            siteIds: idArray,\n            sitesData: [],\n            columns: [\n                {\n                    title: 'Contamination Type',\n                    dataIndex: 'contaminationType',\n                    key: 'contaminationType',\n                    sorter: (a, b) => a.contaminationType.length - b.contaminationType.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Chemical Name',\n                    dataIndex: 'chemicalName',\n                    key: 'chemicalName',\n                    sorter: (a, b) => a.chemicalName.length - b.chemicalName.length,\n                    sortDirections: ['descend', 'ascend'],\n                },\n                {\n                    title: 'Contamination Value',\n                    dataIndex: 'contaminationValue',\n                    key: 'contaminationValue',\n                },\n            ]\n        }\n\n        this.handleBackClick = this.handleBackClick.bind(this);\n        this.getSiteNameKey = this.getSiteNameKey.bind(this);\n        this.handleOnSiteClicked = this.handleOnSiteClicked.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    loadData() {\n        getSitesWithData(this.state.siteIds)\n            .then(response => {\n                this.setState({\n                    sitesData: response,\n                    singleSiteData: response.length === 1 ? response[0] : null\n                });\n            }).catch(error => {\n                this.setState({\n                    sitesData: [],\n                    singleSiteData: null\n                });\n            });\n    }\n\n    saveFormRef = formRef => {\n        this.formRef = formRef;\n    };\n\n    getSiteNameKey(site) {\n        return site.siteName + \" (id : \" + site.id + \")\";\n    }\n\n    render() {\n        return (\n            <div className=\"user-home-container\">\n                <PageHeader className=\"user-list-page-title\" title={this.state.isSingleSite ? \"Site Details\" : \"Compare Sites\"} onBack={this.handleBackClick} />\n                <h3 style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 1 Values</b></h3>\n                {this.renderTierOneChart()}\n                {this.renderTierTwoChart()}\n                {this.renderTierThreeChart()}\n            </div>\n        );\n    }\n\n    handleOnSiteClicked(siteNameKey) {\n        const siteId = siteNameKey.substring(siteNameKey.indexOf(\"id : \") + 5, siteNameKey.length - 1);\n        this.props.history.push(\"/site-details?sites=\" + [siteId])\n        console.log(\"Clicked site key \" + siteId);\n    }\n\n    renderTierOneChart() {\n        const sitesData = this.state.sitesData;\n        if (sitesData && sitesData.length > 0) {\n            const fields = [\"Water\", \"Soil\"];\n            const types = sitesData.map((site) => this.getSiteNameKey(site));\n            const data = [];\n\n            for (const [index, site] of sitesData.entries()) {\n                var typeData = {}\n                typeData.name = this.getSiteNameKey(site);\n                typeData[\"Water\"] = site.t1[\"Water\"]\n                typeData[\"Soil\"] = site.t1[\"Soil\"]\n\n                data.push(typeData)\n            }\n\n            return (\n                <RankChart fields={fields} data={data} onSiteClicked={this.handleOnSiteClicked}/>\n            )\n        }\n    }\n\n    renderTierTwoChart() {\n        const sitesData = this.state.sitesData;\n        if (sitesData && sitesData.length > 1) {\n            const ageGroups = ['0-3', '3-6', '6-10', '10-18', '18+'];\n            const fields = [\"NCR\", \"CR\"];\n            const dataByAgeGroup = {};\n\n            for (const [i, ageGrp] of ageGroups.entries()) {\n                var data = [];\n\n                for (const [index, siteData] of sitesData.entries()) {\n                    const siteNameKey = this.getSiteNameKey(siteData);\n                    const t2Data = siteData.t2;\n                    const ageGroupData = t2Data[ageGrp];\n\n                    var siteInfo = {};\n                    siteInfo.name = siteNameKey;\n\n                    if(ageGroupData) {\n                        siteInfo[\"NCR\"] = ageGroupData.NCR;\n                        siteInfo[\"CR\"] = ageGroupData.CR;\n                    }\n\n                    data.push(siteInfo);\n                }\n\n                dataByAgeGroup[ageGrp] = data;\n            }\n\n            const views = []\n\n            for (const [index, ageGrp] of ageGroups.entries()) {\n                views.push(<h3 key={\"tier2Header\" + index} style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 2 Values ({ageGrp})</b></h3>);\n                views.push(<RankChart key={\"tier2Views\" + index} fields={fields} data={dataByAgeGroup[ageGrp]} onSiteClicked={this.handleOnSiteClicked}/>);\n            }\n\n            return (\n                <div>\n                    {views}\n                </div>\n            )\n        }\n    }\n\n    renderTierThreeChart() {\n        const sitesData = this.state.sitesData;\n        if (sitesData && sitesData.length > 1) {\n            const ageGroups = ['0-3', '3-6', '6-10', '10-18', '18+'];\n            const fields = [\"NCR\", \"CR\"];\n            const dataByAgeGroup = {};\n\n            for (const [i, ageGrp] of ageGroups.entries()) {\n                var data = [];\n\n                for (const [index, siteData] of sitesData.entries()) {\n                    const siteNameKey = this.getSiteNameKey(siteData);\n                    const t3Data = siteData.t3;\n                    const ageGroupData = t3Data[ageGrp];\n\n                    var siteInfo = {};\n                    siteInfo.name = siteNameKey;\n\n                    if(ageGroupData) {\n                        siteInfo[\"NCR\"] = ageGroupData.NCR;\n                        siteInfo[\"CR\"] = ageGroupData.CR;\n                    }\n\n                    data.push(siteInfo);\n                }\n\n                dataByAgeGroup[ageGrp] = data;\n            }\n            \n            const views = []\n\n            for (const [index, ageGrp] of ageGroups.entries()) {\n                views.push(<h3 key={\"tier3Header\" + index} style={{ marginBottom: '32px', marginTop: '48px' }}><b>Tier 3 Values ({ageGrp})</b></h3>);\n                views.push(<RankChart key={\"tier3Views\" + index} fields={fields} data={dataByAgeGroup[ageGrp]} onSiteClicked={this.handleOnSiteClicked}/>);\n            }\n\n            return (\n                <div>\n                    {views}\n                </div>\n            )\n        }\n    }\n\n    handleBackClick() {\n        this.props.history.goBack()\n    }\n}\n\nexport default CompareSites;","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Route,\n  withRouter,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\n\nimport Home from '../home/Home';\nimport Login from '../user/login/Login';\n// import Signup from '../user/signup/Signup';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport UserList from '../home/UserList';\nimport ToxicityData from '../home/ToxicityData';\nimport ConsumptionData from '../home/ConsumptionData';\nimport SiteData from '../home/SiteData'\nimport SiteDetails from '../home/SiteDetails'\nimport CompareSites from '../home/CompareSites'\n\nimport { Layout, notification } from 'antd';\nconst { Content, Footer } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: localStorage.getItem(ACCESS_TOKEN) != null,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n      .then(response => {\n        this.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      }).catch(error => {\n        this.setState({\n          isLoading: false,\n          isAuthenticated: false\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo = \"/login\", notificationType = \"success\", description = \"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(redirectTo);\n\n    notification[notificationType]({\n      message: 'rankCare',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'rankCare',\n      description: \"You're successfully logged in.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n  handleDetails(sites) {\n\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingIndicator />\n    }\n    return (\n      <Layout className=\"app-container\">\n        <AppHeader isAuthenticated={this.state.isAuthenticated}\n          currentUser={this.state.currentUser}\n          onLogout={this.handleLogout} />\n\n        <Content className=\"app-content\">\n          <div className=\"test-container\">\n            <Switch>\n              <Route exact path=\"/\"\n                render={(props) => this.state.isAuthenticated ? <Home isAuthenticated={this.state.isAuthenticated}\n                  currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/login\" />}>\n              </Route>\n              <Route path=\"/login\"\n                render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n              {/* <Route path=\"/signup\" component={Signup}></Route> */}\n              <Route exact path=\"/manage-users\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser && this.state.currentUser.isAdmin ?\n                  <UserList currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route exact path=\"/toxicity\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser ?\n                  <ToxicityData currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route exact path=\"/consumption\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser ?\n                  <ConsumptionData currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route exact path=\"/sites\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser ?\n                  <SiteData onDetails={this.handleDetails} currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route exact path=\"/site-details\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser ?\n                  <SiteDetails currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route exact path=\"/site-compare\"\n                render={(props) => this.state.isAuthenticated && this.state.currentUser ?\n                  <CompareSites currentUser={this.state.currentUser} {...props} /> :\n                  <Redirect to=\"/\" />}>\n              </Route>\n              <Route render={(props) => <Redirect to=\"/\" />}></Route>\n            </Switch>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>rankCare ©2019 CRC CARE Ptv Ltd. All Rights Reserved</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\nregisterServiceWorker();"],"sourceRoot":""}